@model project.Models.Product

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "QLSP", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container mt-5">
        <div class="card shadow">
            <div class="card-header bg-danger text-white">
                <h2 class="text-center mb-0">Thêm Sản Phẩm Mới</h2>
            </div>

            <div class="card-body">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.tensp, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.tensp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tensp, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.madm, htmlAttributes: new { @class = "form-label" })
                    @Html.DropDownList("madm", null, htmlAttributes: new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.madm, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.gia, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.gia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.gia, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.mota, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.mota, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mota, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.hinhanh, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.hinhanh, null, new { type = "file", @class = "form-control", id = "imageInput" })
                    @Html.ValidationMessageFor(model => model.hinhanh, "", new { @class = "text-danger" })

                    <div id="imagePreviewContainer" class="mt-3" style="display:none;">
                        <img id="imagePreview" src="" alt="Image preview" class="img-fluid" style="max-width: 30%; height: auto;">
                    </div>
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.soluong, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.soluong, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.soluong, "", new { @class = "text-danger" })
                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-success me-2">Lưu</button>
                    <a href="@Url.Action("Index", "QLSP")" class="btn btn-secondary ms-2">Hủy</a>
                </div>

            </div>
        </div>
    </div>

}

<style>

    .card {
        border-radius: 10px;
        border: 1px solid #ddd;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .card-header {
        font-size: 1.5rem;
        text-align: center;
        background-color: #007bff;
        color: white;
        border-bottom: 1px solid #ddd;
        padding: 15px;
    }

    .form-group label {
        font-weight: bold;
        margin-bottom: 5px;
        display: block;
    }

    .form-group input {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        width: 100%;
    }

    .btn {
        padding: 10px 20px;
        border-radius: 5px;
    }

    .btn-success {
        background-color: #28a745;
        border: none;
        color: white;
    }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
        color: white;
    }
</style>
<script>

    document.getElementById('imageInput').addEventListener('change', function (event) {
        var file = event.target.files[0];

        if (file) {
            var reader = new FileReader();

            // Set the image preview once the file is loaded
            reader.onload = function (e) {
                var previewContainer = document.getElementById('imagePreviewContainer');
                var previewImage = document.getElementById('imagePreview');

                // Show the preview container and set the image source
                previewContainer.style.display = 'block';
                previewImage.src = e.target.result;
            };

            reader.readAsDataURL(file); // Read the selected file
        }
    });
</script>