@model project.Models.Product

@{
    ViewBag.Title = "Edit";
}
<div class="container mt-5">

    <div class="card p-4">
        <div class="card-header bg-danger text-white text-center">
            <h2>Sửa Sản Phẩm</h2>
        </div>

        @using (Html.BeginForm("Edit", "QLSP", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.HiddenFor(model => model.masp, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.masp, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.masp, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row mb-3">
                        @Html.LabelFor(model => model.tensp, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.tensp, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.tensp, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row mb-3">
                        @Html.LabelFor(model => model.madm, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("madm", (SelectList)ViewBag.madm, new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.madm, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row mb-3">
                        @Html.LabelFor(model => model.gia, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.gia, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.gia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row mb-3">
                        @Html.LabelFor(model => model.mota, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.mota, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.mota, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row mb-3">
                        @Html.LabelFor(model => model.hinhanh, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.hinhanh, null, new { type = "file", @class = "btn btn-light", @style = "background-color: white;   border-color: black;" })
                            <img src="~/Content/images/@Model.hinhanh" style="width:150px" />
                            @Html.Hidden("oldhinhanh", @Model.hinhanh)
                            @Html.ValidationMessageFor(model => model.hinhanh, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row mb-3">
                        @Html.LabelFor(model => model.soluong, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.soluong, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.soluong, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="text-center">
                        <button type="submit" class="btn btn-success me-2">Lưu</button>
                        <a href="@Url.Action("Index", "QLSP")" class="btn btn-secondary">Hủy</a>
                    </div>
                
        }
    </div>
</div>

<style>

    .card {
        border-radius: 10px;
        border: 1px solid #ddd;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .card-header {
        font-size: 1.5rem;
        text-align: center;
        background-color: #007bff;
        color: white;
        border-bottom: 1px solid #ddd;
        padding: 15px;
    }

    .form-group label {
        font-weight: bold;
        margin-bottom: 5px;
        display: block;
    }

    .form-group input {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        width: 100%;
    }

    .btn {
        padding: 10px 20px;
        border-radius: 5px;
    }

    .btn-success {
        background-color: #28a745;
        border: none;
        color: white;
    }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
        color: white;
    }
</style>
